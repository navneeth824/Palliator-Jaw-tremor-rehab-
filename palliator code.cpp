#include<stdio.h>
#include<conio.h>
 main(){


int a[] = {344	,
347	,
351	,
342	,
332	,
315	,
331	,
335	,
336	,
335	,
336	,
336	,
336	,
336	,
335	,
328	,
317	,
319	,
338	,
359	,
356	,
343	,
341	,
347	,
349	,
343	,
338	,
314	,
324	,
333	,
336	,
335	,
335	,
336	,
324	,
317	,
330	,
355	,
348	,
342	,
339	,
340	,
352	,
343	,
340	,
337	,
335	,
308	,
329	,
334	,
336	,
335	,
335	,
330	,
326	,
330	,
340	,
341	,
338	,
335	,
335	,
349	,
349	,
349	,
347	,
344	,
343	,
299	,
324	,
334	,
336	,
336	,
337	,
337	,
337	,
336	,
337	,
336	,
320	,
315	,
324	,
348	,
365	,
352	,
345	,
344	,
351	,
348	,
343	,
292	,
322	,
333	,
337	,
335	,
335	,
337	,
337	,
338	,
336	,
336	,
325	,
314	,
321	,
341	,
364	,
359	,
346	,
348	,
349	,
350	,
341	,
280	,
331	,
333	,
335	,
335	,
336	,
336	,
337	,
337	,
335	,
319	,
316	,
326	,
359	,
359	,
345	,
340	,
343	,
348	,
345	,
343	,
336	,
332	,
303	,
332	,
335	,
336	,
335	,
335	,
336	,
336	,
336	,
330	,
317	,
318	,
333	,
346	,
353	,
359	,
350	,
345	,
349	,
352	,
345	,
340	,
332	,
324	,
321	,
334	,
336	,
335	,
336	,
337	,
337	,
326	,
322	,
329	,
347	,
347	,
340	,
336	,
342	,
349	,
345	,
345	,
342	,
341	,
343	,
301	,
329	,
335	,
335	,
334	,
336	,
337	,
336	,
337	,
320	,
315	,
325	,
348	,
365	,
349	,
344	,
348	,
347	,
349	,
345	,
336	,
335	,
301	,
333	,
336	,
337	,
336	,
337	,
337	,
336	,
319	,
317	,
330	,
357	,
361	,
343	,
338	,
343	,
351	,
348	,
343	,
336	,
297	,
330	,
335	,
336	,
335	,
337	,
338	,
338	,
337	,
331	,
319	,
318	,
334	,
354	,
351	,
343	,
340	,
346	,
350	,
350	,
343	,
337	,
337	,
298	,
327	,
335	,
336	,
336	,
336	,
336	,
337	,
327	,
315	,
317	,
333	,
346	,
354	,
355	,
349	,
352	,
359	,
354	,
345	,
337	,
333	,
283	,
329	,
335	,
335	,
335	,
337	,
338	,
338	,
331	,
316	,
317	,
341	,
363	,
348	,
340	,
338	,
351	,
351	,
346	,
339	,
333	,
327	,
326	,
335	,
337	,
336	,
336	,
336	,
336	,
322	,
314	,
321	,
338	,
352	,
352	,
348	,
345	,
353	,
353	,
346	,
346	,
337	,
338	,
314	,
320	,
334	,
337	,
335	,
336	,
337	,
337	,
330	,
315	,
318	,
340	,
362	,
349	,
340	,
340	,
346	,
347	,
345	,
339	,
335	,
332	,
333	,
324	,
335	,
336	,
336	,
336	,
336	,
336	,
327	,
320	,
321	,
333	,
347	,
349	,
344	,
345	,
353	,
349	,
349	,
341	,
338	,
335	,
332	,
317	,
335	,
336	,
336	,
336	,
337	,
337	,
330	,
316	,
318	,
349	,
362	,
345	,
339	,
339	,
345	,
344	,
342	,
340	,
335	,
335	,
324	,
334	,
335	,
335	,
336	,
336	,
336	,
336	,
335	,
332	,
322	,
319	,
330	,
346	,
353	,
350	,
345	,
342	,
351	,
346	,
346	,
336	,
333	,
332	,
302	,
332	,
333	,
333	,
334	,
335	,
335	,
336	,
321	,
316	,
328	,
363	,
349	,
339	,
338	,
342	,
346	,
343	,
337	,
335	,
333	,
321	,
335	,
335	,
335	,
335	,
336	,
336	,
335	,
335	,
329	,
322	,
318	,
328	,
345	,
349	,
348	,
344	,
341	,
343	,
349	,
344	,
341	,
335	,
330	,
331	,
323	,
334	,
336	,
335	,
336	,
336	,
334	,
322	,
320	,
329	,
351	,
355	,
343	,
338	,
343	,
350	,
348	,
342	,
336	,
330	,
319	,
333	,
335	,
335	,
335	,
336	,
336	,
337	,
336	,
321	,
316	,
322	,
341	,
357	,
352	,
350	,
347	,
355	,
349	,
343	,
335	,
311	,
333	,
336	,
335	,
336	,
336	,
336	,
337	,
336	,
322	,
313	,
319	,
344	,
370	





 };
int i,sum,j;
int maxima[500],  minima[500];
int countmax=0, countmin=0;
float minimaaverage, maximaaverage, maximasum, minimasum;
float average;
sum = 0;
for(i=0;i<500;i++){
	sum = sum + a[i];
}
average = sum/500;

for(i=1;i<499;i++)
{
	if(a[i]>a[i-1])
		{
			if(a[i]>a[i+1])
			{
				countmax++;
				maxima[countmax-1]=a[i];
			}
			else if(a[i]==a[i+1])
			{
				j=i;
				while(a[i]==a[j])
				{
					j++;
				}
				if(a[i]>a[j])
				{
					countmax++;
					maxima[countmax-1]=a[i];
				}
				i=j-1;
			}
		}

	if(a[i]<a[i-1])
		{
			if(a[i]<a[i+1])
			{
				countmin++;
				minima[countmin-1]=a[i];
			}
			else if(a[i]==a[i+1])
			{
				j=i;
				while(a[i]==a[j])
				{
					j++;
				}
				if(a[i]<a[j])
				{
					countmin++;
					minima[countmin-1]=a[i];
				}
				i=j-1;
			}
		}
}

for(i=0;i<countmax;i++){
	maximasum = maximasum + maxima[i];
}
maximaaverage= maximasum/countmax;
for(i=0;i<countmin;i++){
	minimasum = minimasum + minima[i];
}
minimaaverage= minimasum/countmin;

if((maximaaverage-average)>10){
	 printf( "trmor");

}
if((maximaaverage-average)<10){
	 printf( "speech");
	
}

printf("minimaaverage:");
printf( "%f",minimaaverage);
printf("\n");
printf("maximaaverage:");
printf("%f", maximaaverage);
printf("\n");
printf("mean:");
printf("%f", average);
printf("/n");
printf("number of maxima");
printf("%d",countmax);
printf("number of minima");
printf( "%d", countmin);

}





